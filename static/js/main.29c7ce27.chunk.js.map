{"version":3,"sources":["service/index.js","components/Gatipic.js","App.js","reportWebVitals.js","index.js"],"names":["GetGati","a","fetch","data","json","value","url","GetGatiGiff","useStyle","makeStyles","caja","width","height","borderRadius","border","boxShadow","overFlow","margin","alignItems","justifyContent","backgroundColor","boton","display","position","marginLeft","marginRight","Gatipic","classes","useState","setGatiUrl","GiffUrl","setGiffUrl","handleGati","newUrl","handleGatiGiff","newUrlGiff","useEffect","className","Box","component","m","id","src","Button","variant","color","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAEaA,EAAO,uCAAG,8BAAAC,EAAA,sEACAC,MAAM,oCADN,cACbC,EADa,gBAECA,EAAKC,OAFN,cAEbC,EAFa,qDAGSA,EAAMC,MAHf,2CAAH,qDAOPC,EAAW,uCAAG,8BAAAN,EAAA,sEACJC,MAAM,wCADF,cACjBC,EADiB,gBAEHA,EAAKC,OAFF,cAEjBC,EAFiB,qDAGKA,EAAMC,MAHX,2CAAH,qD,+BCDlBE,EAAWC,YAAW,CAC1BC,KAAM,CACJC,MAAO,QACPC,OAAQ,QACRC,aAAc,MACdC,OAAQ,YACRC,UAAW,oBACXC,SAAU,SACVC,OAAQ,OACRC,WAAY,SACZC,eAAgB,SAChBC,gBAAiB,WAEnBC,MAAO,CACLV,MAAO,QACPC,OAAQ,OACRC,aAAc,MACdS,QAAS,QACTC,SAAU,WACVN,OAAQ,OACRO,WAAY,OACZC,YAAa,OACbV,UAAW,uBAoEAW,EA/DC,WAEd,IAAMC,EAAUnB,IAEhB,EAA8BoB,qBAA9B,mBAAgBC,GAAhB,WACA,EAAgCD,qBAAhC,mBAAQE,EAAR,KAAiBC,EAAjB,KAGMC,EAAU,uCAAG,4BAAA/B,EAAA,sEAEED,IAFF,OAEbiC,EAFa,OAGjBJ,EAAWI,GAHM,2CAAH,qDAOVC,EAAc,uCAAG,4BAAAjC,EAAA,sEAEEM,IAFF,OAEjB4B,EAFiB,OAGrBJ,EAAWI,GAHU,2CAAH,qDAcpB,OAPAC,qBAAU,WACRJ,IACAE,MACA,IAKA,mCACE,sBAAKG,UAAU,OAAf,UAEE,cAACC,EAAA,EAAD,CAAKC,UAAU,OAAOC,EAAG,EAAzB,SACE,qBACEC,GAAI,EACJJ,UAAU,SACVK,IAAcZ,MAIlB,cAACa,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,YACNR,UAAWV,EAAQN,MACnByB,QAASd,EAJX,kBASA,cAACW,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNR,UAAWV,EAAQN,MACnByB,QAASZ,EAJX,wBCvEOa,MAXf,WAGE,OACE,mCACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.29c7ce27.chunk.js","sourcesContent":["\n\nexport const GetGati = async () => {\n    const data = await fetch('https://cataas.com/cat?json=true');\n    const value = await data.json();\n    return `https://cataas.com${value.url}`;\n};\n\n\nexport const GetGatiGiff = async () => {\n    const data = await fetch('https://cataas.com/cat/gif?json=true');\n    const value = await data.json();\n    return `https://cataas.com${value.url}`;\n};\n\n","import React, { useEffect, useState } from 'react';\nimport {GetGati, GetGatiGiff} from '../service/index';\nimport Box from '@material-ui/core/Box';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles'\n\n\n\nconst useStyle = makeStyles({\n  caja: {\n    width: '330px',\n    height: '430px',\n    borderRadius: '8px',\n    border: '2px solid',\n    boxShadow: '0px 6px 16px gray',\n    overFlow: 'hidden',\n    margin: '20px',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#343838',\n  },\n  boton: {\n    width: '120px',\n    height: '90px',\n    borderRadius: '40%',\n    display: 'block',\n    position: 'relative',\n    margin: '10px',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    boxShadow: '0px 6px 16px gray',\n  }\n})\n\n\nconst Gatipic = () => {\n\n  const classes = useStyle();\n\n  const [GatiUrl, setGatiUrl] = useState();\n  const [ GiffUrl, setGiffUrl ] = useState();\n\n  \n  const handleGati = async () => {\n    //aca va el swich del useState\n    let newUrl = await GetGati();\n    setGatiUrl(newUrl);\n  \n  }\n\n  const handleGatiGiff = async () => {\n    //aca va el swich del useState\n    let newUrlGiff = await GetGatiGiff();\n    setGiffUrl(newUrlGiff);\n  \n  }\n\n  useEffect(() => {\n    handleGati();\n    handleGatiGiff();\n  },[]);\n\n   \n\n  return(\n    <>\n      <div className=\"caja\">\n\n        <Box component=\"span\" m={1}>\n          <img\n            id={1}\n            className=\"imagen\"\n            src={GatiUrl, GiffUrl}\n          />\n        </Box>\n        \n        <Button\n          variant=\"contained\" \n          color=\"secondary\"\n          className={classes.boton}\n          onClick={handleGati}  \n          >\n            Next\n        </Button>\n\n        <Button\n          variant=\"contained\" \n          color=\"primary\"\n          className={classes.boton}\n          onClick={handleGatiGiff}  \n          >\n            GIFF\n        </Button>\n\n      </div>\n    </>\n  )\n}\nexport default Gatipic;\n","import './App.css';\nimport Gatipic from './components/Gatipic';\n\nfunction App() {\n\n\n  return (\n    <>\n      <Gatipic/>\n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}